C51 COMPILER V9.00   RING_BUFFER                                                           06/10/2020 17:50:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RING_BUFFER
OBJECT MODULE PLACED IN ..\obj\ring_buffer.obj
COMPILER INVOKED BY: D:\Program Files\KEILC51\files\C51\BIN\C51.EXE ..\..\common\ring_buffer.c BROWSE DEBUG OBJECTEXTEND
                    - PRINT(.\ring_buffer.lst) TABS(2) OBJECT(..\obj\ring_buffer.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file     ring_buffer.c
   4            * @author   ZRT
   5            * @version  V1.0
   6            * @date     2020/04/11
   7            * @attention  
   8            * @warning  
   9            ******************************************************************************  
  10            * 
  11            * 
  12            ******************************************************************************
  13            */
  14          /*-- includes ----------------------------------------------------------------*/
  15          #include "./ring_buffer.h"
  16          
  17          
  18          /*-- defined -----------------------------------------------------------------*/    
  19          #define   DB_LOG(fmt)      
  20          #define   ASSERT(fmt)
  21          
  22          
  23          /*-- typedef -----------------------------------------------------------------*/
  24          
  25          
  26          
  27          /*-- private variables -------------------------------------------------------*/
  28          
  29          
  30          /*-- private functions -------------------------------------------------------*/
  31          
  32          
  33          /*-- functions ---------------------------------------------------------------*/
  34            
  35          /** @function  
  36            * @brief   
  37            * @param       
  38            * @return  
  39            */
  40          static  u32_t location(RingBuffObj* thiz, rb_depth_t i)
  41          {
  42   1        rb_depth_t  j = 0;
  43   1      
  44   1        ASSERT(thiz);
  45   1        
  46   1        j = ((i+1) >= thiz->depth) ? 0 : (i+1);
  47   1      
  48   1        return j;
  49   1      }
  50          
  51          
  52          /** @function  
  53            * @brief   
  54            * @param       
C51 COMPILER V9.00   RING_BUFFER                                                           06/10/2020 17:50:11 PAGE 2   

  55            * @return  
  56            */
  57          rb_depth_t  check_ring_buff(RingBuffObj* thiz)
  58          {
  59   1        ASSERT(thiz);
  60   1      
  61   1        return  thiz->remain;
  62   1      }
  63          
  64          /** @function  
  65            * @brief   
  66            * @param       
  67            * @return  
  68            */
  69          rb_data_type  get_ring_buff_data(RingBuffObj* thiz)
  70          {
  71   1        rb_data_type  ret = 0;
  72   1        rb_depth_t    pos = 0;
  73   1      
  74   1        ASSERT(thiz);
  75   1        ASSERT(thiz->ptBuffer);
  76   1        
  77   1        if(thiz->remain > 0)
  78   1        {
  79   2          pos = thiz->posGet;
  80   2          thiz->posGet = location(thiz, thiz->posGet);
  81   2          thiz->remain--;
  82   2          ret = thiz->ptBuffer[pos];
  83   2        }
  84   1        else 
  85   1        {
  86   2          ret = 0;
  87   2          DB_LOG("Ring buffer is empty.\r\n");
  88   2        }
  89   1        
  90   1        return ret;
  91   1      }
  92          
  93           
  94          /** @function  
  95            * @brief   
  96            * @param       
  97            * @return  
  98            */
  99          void  put_ring_buff_data(RingBuffObj* thiz, rb_data_type dat)
 100          {
 101   1        ASSERT(thiz);
 102   1        ASSERT(thiz->ptBuffer);
 103   1        
 104   1        if(thiz->remain < thiz->depth)
 105   1        {
 106   2          thiz->ptBuffer[thiz->posPut] = dat;
 107   2          thiz->posPut = location(thiz, thiz->posPut);
 108   2          thiz->remain++;
 109   2        }
 110   1        else
 111   1        {
 112   2          DB_LOG("buffer is full.\r\n");
 113   2        }
 114   1      }
 115          
 116          /*------------------ end of file ---------------------------------------------*/
C51 COMPILER V9.00   RING_BUFFER                                                           06/10/2020 17:50:11 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    373    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
