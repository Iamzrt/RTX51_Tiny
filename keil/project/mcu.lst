C51 COMPILER V9.00   MCU                                                                   06/10/2020 15:52:17 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MCU
OBJECT MODULE PLACED IN ..\obj\mcu.obj
COMPILER INVOKED BY: D:\Program Files\KEILC51\files\C51\BIN\C51.EXE ..\..\mcu\mcu.c BROWSE DEBUG OBJECTEXTEND PRINT(.\mc
                    -u.lst) TABS(2) OBJECT(..\obj\mcu.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    
   4            * @author  
   5            * @version 
   6            * @date   
   7            * @brief    
   8                        %d               十进制有符号整数
   9                        %u               十进制无符号整数
  10                        %f               浮点数
  11                        %s               字符串
  12                        %c               单个字符
  13                        %p               指针的值
  14                        %e               指数形式的浮点数
  15                        %x, %X           无符号以十六进制表示的整数
  16                        %0               无符号以八进制表示的整数
  17                        %g               自动选择合适的表示法
  18                  %lf              表示输出double浮点数
  19            ******************************************************************************  
  20            * 
  21            * 
  22            ******************************************************************************
  23            */
  24          /*-- includes ----------------------------------------------------------------*/
  25          #include "./mcu.h"
  26          
  27          /*-- defined -----------------------------------------------------------------*/
  28          #define      DB_LOG(x)             LOG("[MCU]");LOG(x)
  29          
  30          #define      FOSC_160000
  31          
  32          
  33          
  34          /*-- private variables -------------------------------------------------------*/
  35          static  bit    BIT_TMP;
  36          
  37          
  38          
  39          /*-- functions ---------------------------------------------------------------*/
  40          static    void     mcu_clk_init(void);
  41          static    void     mcu_gpio_init(void);
  42          
  43          
  44          
  45          #if   LOG_ENABLE 
  46          
  47          static    void     mcu_uart0_timer1(u32_t u32Baudrate);
  48          
  49          /**           
  50            * @brief      for UART_printf      
  51            * @param    
  52            * @return  
  53            * @note
  54            */
C51 COMPILER V9.00   MCU                                                                   06/10/2020 15:52:17 PAGE 2   

  55          char putchar (char c)
  56          {
  57   1        while (!TI);
  58   1        TI = 0;
  59   1        return (SBUF = c);
  60   1      }
  61          
  62          #endif
  63          
  64          
  65          
  66          /**           
  67            * @brief            
  68            * @param    
  69            * @return  
  70            * @note
  71            */
  72          u8_t    mcu_init(void)
  73          {
  74   1        clr_EA;                /* disable interrupts*/
  75   1      
  76   1        mcu_clk_init();
  77   1      
  78   1        mcu_gpio_init();
  79   1      
  80   1      #if   LOG_ENABLE
  81   1        mcu_uart0_timer1(115200);
  82   1      #endif
  83   1      
  84   1        set_EA;                        /* enable interrupts*/
  85   1      
  86   1        return 1;
  87   1      }
  88          
  89          
  90          /**           
  91            * @brief   HIRC enable         
  92            * @param    
  93            * @return  
  94            * @note  MCU power on system clock is HIRC (16 MHz).
  95                       Please keep P3.0 HIGH before you want to modify Fsys to LIRC.
  96            */
  97          static   void  mcu_clk_init(void)
  98          {
  99   1        set_HIRCEN;  /* HIRC 16MHz */
 100   1        while((CKSWT&SET_BIT5)==0);       /* check ready */
 101   1        clr_OSC1;
 102   1        clr_OSC0;
 103   1        while((CKEN&SET_BIT0)==1);        /* check system clock switching OK or NG */
 104   1      }
 105          
 106          
 107          
 108          /**           
 109            * @brief            
 110            * @param    
 111            * @return  
 112            * @note
 113            */
 114          static   void  mcu_gpio_init(void)
 115          {
 116   1        Set_All_GPIO_Quasi_Mode;
C51 COMPILER V9.00   MCU                                                                   06/10/2020 15:52:17 PAGE 3   

 117   1      
 118   1      
 119   1      }
 120          
 121          
 122          
 123          
 124          #if   LOG_ENABLE
 125          
 126          /**           
 127            * @brief            
 128            * @param    
 129            * @return  
 130            * @note
 131            */
 132          static  void  mcu_uart0_timer1(u32_t u32Baudrate)    //T1M = 1, SMOD = 1
 133          {
 134   1        P06_Quasi_Mode; /* Setting UART pin as Quasi mode for transmit */
 135   1        P07_Quasi_Mode; /* Setting UART pin as Quasi mode for transmit */
 136   1        
 137   1        SCON = 0x50;      /* UART0 Mode1,REN=1,TI=1 */
 138   1        TMOD |= 0x20;     /* Timer1 Mode1 */
 139   1          
 140   1        set_SMOD;         /* UART0 Double Rate Enable */
 141   1        set_T1M;
 142   1        clr_BRCK;         /* Serial port 0 baud rate clock source = Timer1 */
 143   1       
 144   1      #ifdef FOSC_160000
 145   1        TH1 = 256 - (1000000/u32Baudrate+1);          /*16 MHz */
 146   1      #endif   
 147   1        
 148   1      #ifdef FOSC_166000
                TH1 = 256 - (1037500/u32Baudrate);            /*16.6 MHz */
              #endif
 151   1      
 152   1        set_TR1;
 153   1        set_TI;       /* For printf function must setting TI = 1 */
 154   1      }
 155          #endif
 156          
 157          
 158          /*---------------------- end of file -----------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    171    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
